{"version":3,"file":"component---src-pages-using-typescript-tsx-f9c3c25cebf1d330f786.js","mappings":"6KA0CA,UAhCwDA,IAAA,IAAC,KACvDC,EAAI,SACJC,GACD,SACCC,EAAAA,cAAAA,OAAAA,KACEA,EAAAA,cAAAA,KAAAA,KAAI,mBACc,yBAAG,0BAErBA,EAAAA,cAAAA,IAAAA,KAAG,4CACwC,4BAAM,YAAe,0CAClC,4BAAM,YAAe,qCACzC,4BAAM,oBAAuB,MAEvCA,EAAAA,cAAAA,IAAAA,KAAG,4CACwC,4BAAM,cAAiB,oBACxD,4BAAM,cAAiB,gBAAa,4BAAM,YAAe,UAEnEA,EAAAA,cAAAA,IAAAA,KAAG,gCAC4B,4BAAOD,EAASE,UAAgB,uBACnDH,EAAKI,KAAKC,UAAU,KAEhCH,EAAAA,cAAAA,IAAAA,KAAG,kCAC+B,IAChCA,EAAAA,cAAAA,IAAAA,CAAGI,KAAK,yEAAwE,kCAE5E,KAGNJ,EAAAA,cAACK,EAAAA,KAAI,CAACC,GAAG,KAAI,2BACR,C","sources":["webpack://ibd-lx-metaverse-web-demo/./src/pages/using-typescript.tsx"],"sourcesContent":["// If you don't want to use TypeScript you can delete this file!\r\nimport * as React from \"react\"\r\nimport { PageProps, Link, graphql } from \"gatsby\"\r\n\r\ntype DataProps = {\r\n  site: {\r\n    buildTime: string\r\n  }\r\n}\r\n\r\nconst UsingTypescript: React.FC<PageProps<DataProps>> = ({\r\n  data,\r\n  location,\r\n}) => (\r\n  <main>\r\n    <h1>\r\n      Gatsby supports <b>TypeScript by default</b>\r\n    </h1>\r\n    <p>\r\n      This means that you can create and write <code>.ts/.tsx</code> files for\r\n      your pages, components, and <code>gatsby-*</code> configuration files (for\r\n      example <code>gatsby-config.ts</code>).\r\n    </p>\r\n    <p>\r\n      For type checking you'll want to install <code>typescript</code> via npm\r\n      and run <code>tsc --init</code> to create a <code>tsconfig</code> file.\r\n    </p>\r\n    <p>\r\n      You're currently on the page <code>{location.pathname}</code> which was\r\n      built on {data.site.buildTime}.\r\n    </p>\r\n    <p>\r\n      To learn more, head over to our{\" \"}\r\n      <a href=\"https://www.gatsbyjs.com/docs/how-to/custom-configuration/typescript/\">\r\n        documentation about TypeScript\r\n      </a>\r\n      .\r\n    </p>\r\n    <Link to=\"/\">Go back to the homepage</Link>\r\n  </main>\r\n)\r\n\r\nexport default UsingTypescript\r\n\r\nexport const query = graphql`\r\n  {\r\n    site {\r\n      buildTime(formatString: \"YYYY-MM-DD hh:mm a z\")\r\n    }\r\n  }\r\n`\r\n"],"names":["_ref","data","location","React","pathname","site","buildTime","href","Link","to"],"sourceRoot":""}